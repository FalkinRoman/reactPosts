{"ast":null,"code":"var _jsxFileName = \"/Users/falkinroman/Desktop/my-app/src/Pages/PostIdPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetching } from '../hook/useFetching';\nimport PostService from '../API/PostService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostIdPage = () => {\n  _s();\n  const params = useParams(); //хук позволяет закрать с url параметр (номер поста)\n  const [post, setPost] = useState({}); //Сохранить значение поста\n  const [fetchPostId, isPostIdLoading, postIdError] = useFetching(async () => {\n    const responce = await PostService.getById(params.id);\n    setPost(responce.data);\n  });\n  useEffect(() => {\n    fetchPostId();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430: \", post.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435: \", post.body]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(PostIdPage, \"csr7vZRUERWCoBQRqFSuhtP/3ow=\", false, function () {\n  return [useParams, useFetching];\n});\n_c = PostIdPage;\nexport default PostIdPage;\nvar _c;\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useFetching","PostService","jsxDEV","_jsxDEV","PostIdPage","_s","params","post","setPost","fetchPostId","isPostIdLoading","postIdError","responce","getById","id","data","children","title","fileName","_jsxFileName","lineNumber","columnNumber","body","_c","$RefreshReg$"],"sources":["/Users/falkinroman/Desktop/my-app/src/Pages/PostIdPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetching } from '../hook/useFetching';\nimport PostService from '../API/PostService';\n\nconst PostIdPage = () => {\n    const params = useParams()  //хук позволяет закрать с url параметр (номер поста)\n    const [post, setPost] = useState({}); //Сохранить значение поста\n    const [fetchPostId, isPostIdLoading, postIdError] = useFetching(async() => {\n        const responce = await PostService.getById(params.id)\n        setPost(responce.data)\n    }) \n\n    useEffect(() => {\n        fetchPostId()\n    }, [])\n\n    return (\n        <div>\n            <h1>Название поста: {post.title}</h1>\n            <h2>Описание: {post.body}</h2>\n        </div>\n    );\n};\n\nexport default PostIdPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,qBAAqB;AACjD,OAAOC,WAAW,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC,EAAE;EAC5B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACW,WAAW,EAAEC,eAAe,EAAEC,WAAW,CAAC,GAAGX,WAAW,CAAC,YAAW;IACvE,MAAMY,QAAQ,GAAG,MAAMX,WAAW,CAACY,OAAO,CAACP,MAAM,CAACQ,EAAE,CAAC;IACrDN,OAAO,CAACI,QAAQ,CAACG,IAAI,CAAC;EAC1B,CAAC,CAAC;EAEFlB,SAAS,CAAC,MAAM;IACZY,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,GAAI,mFAAgB,EAACT,IAAI,CAACU,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrClB,OAAA;MAAAa,QAAA,GAAI,oDAAU,EAACT,IAAI,CAACe,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEd,CAAC;AAAChB,EAAA,CAlBID,UAAU;EAAA,QACGL,SAAS,EAE4BC,WAAW;AAAA;AAAAuB,EAAA,GAH7DnB,UAAU;AAoBhB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}