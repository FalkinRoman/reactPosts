{"ast":null,"code":"var _jsxFileName = \"/Users/falkinroman/Desktop/my-app/src/Pages/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PostList from \"../components/PostList\";\nimport PostForm from '../components/PostForm';\nimport PostFilter from '../components/PostFilter';\nimport MyModal from '../components/UI/modal/MyModal';\nimport MyButton from '../components/UI/button/MyButton';\nimport { usePosts } from '../hook/usePost';\nimport PostService from '../API/PostService';\nimport Loader from '../components/UI/loader/Loader';\nimport { useFetching } from '../hook/useFetching';\nimport { getPageCount, getPagesArray } from '../utils/pages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0); //Общее кол-во постов с запроса в header(x-total-count)\n  const [limit, setLimit] = useState(10); //Кол-во постов на странице\n  const [page, setPage] = useState(1); //номер текущей страницы\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const responce = await PostService.getAll(limit, page);\n    setPosts(responce.data);\n    const totalCount = responce.headers['x-total-count']; //кол-во постов \n    setTotalPages(getPageCount(totalCount, limit));\n  });\n  const changePage = page => {\n    setPage(page);\n  };\n\n  //хук для управления жизненным циклом компонента (получение данных при первичной отрисовке)\n  useEffect(() => {\n    fetchPosts();\n  }, [page]);\n\n  //добавить новый пост\n  const createNewPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  //удалить пост\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createNewPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: 15\n      },\n      onClick: () => setModal(true),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: 30\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 $\", postError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 83\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), isPostsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: 30\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 85\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: 'Список постов'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"3M66P7kXesSmok2Mh6wdCIU3RrE=\", false, function () {\n  return [usePosts, useFetching];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","PostList","PostForm","PostFilter","MyModal","MyButton","usePosts","PostService","Loader","useFetching","getPageCount","getPagesArray","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","filter","setFilter","sort","query","modal","setModal","totalPages","setTotalPages","limit","setLimit","page","setPage","sortedAndSearchedPosts","fetchPosts","isPostsLoading","postError","responce","getAll","data","totalCount","headers","changePage","createNewPost","newPost","removePost","post","p","id","children","visible","setVisible","create","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","onClick","display","justifyContent","remove","title","_c","$RefreshReg$"],"sources":["/Users/falkinroman/Desktop/my-app/src/Pages/Posts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PostList from \"../components/PostList\";\nimport PostForm from '../components/PostForm';\nimport PostFilter from '../components/PostFilter';\nimport MyModal from '../components/UI/modal/MyModal';\nimport MyButton from '../components/UI/button/MyButton';\nimport { usePosts } from '../hook/usePost';\nimport PostService from '../API/PostService';\nimport Loader from '../components/UI/loader/Loader';\nimport { useFetching } from '../hook/useFetching';\nimport { getPageCount, getPagesArray } from '../utils/pages'\n\n\nconst Posts = () => {\n\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({ sort: '', query: '' })\n  const [modal, setModal] = useState(false)\n  const [totalPages, setTotalPages] = useState(0) //Общее кол-во постов с запроса в header(x-total-count)\n  const [limit, setLimit] = useState(10) //Кол-во постов на странице\n  const [page, setPage] = useState(1) //номер текущей страницы\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query)\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const responce = await PostService.getAll(limit, page);\n    setPosts(responce.data)\n    const totalCount = responce.headers['x-total-count'];  //кол-во постов \n    setTotalPages(getPageCount(totalCount, limit))\n  })\n\n\n  const changePage = (page) => {\n    setPage(page) \n  }\n\n\n\n\n\n\n\n\n  //хук для управления жизненным циклом компонента (получение данных при первичной отрисовке)\n  useEffect(() => {\n    fetchPosts()\n  }, [page])\n\n\n\n  //добавить новый пост\n  const createNewPost = (newPost) => {\n    setPosts([...posts, newPost])\n    setModal(false)\n  }\n\n\n  //удалить пост\n  const removePost = (post) => {\n    setPosts(posts.filter(p => p.id !== post.id))\n  }\n\n\n  return (\n    <div>\n      <MyModal visible={modal} setVisible={setModal} >\n        <PostForm create={createNewPost} />\n      </MyModal>\n\n\n      <PostFilter filter={filter} setFilter={setFilter} />\n\n      <MyButton style={{ marginTop: 15 }} onClick={() => setModal(true)}>\n        Создать пост\n      </MyButton>\n      {postError &&\n        <div style={{ display: 'flex', justifyContent: 'center', marginTop: 30 }}><h2>Произошла ошибка ${postError}</h2></div>\n      }\n      {isPostsLoading\n        ? <div style={{ display: 'flex', justifyContent: 'center', marginTop: 30 }}><Loader /></div>\n        : <PostList remove={removePost} posts={sortedAndSearchedPosts} title={'Список постов'} />\n      }\n\n    </div>\n  );\n};\n\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}