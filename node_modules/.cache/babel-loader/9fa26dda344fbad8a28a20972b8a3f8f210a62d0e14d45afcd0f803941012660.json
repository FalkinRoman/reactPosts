{"ast":null,"code":"var _jsxFileName = \"/Users/falkinroman/Desktop/my-app/src/components/FormContact.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport MyInput from './UI/input/MyInput';\nimport MyTextarea from './UI/textarea/MyTextarea';\nimport MyButton from './UI/button/MyButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContact = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [nameDirty, setNameDirty] = useState(false);\n  const [nameError, setNameError] = useState('Имя не может быть пустым');\n  const [email, setEmail] = useState('');\n  const [emailDirty, setEmailDirty] = useState(false);\n  const [emailError, setEmailError] = useState('email не может быть пустым');\n  const [comment, setComment] = useState('');\n  const [validForm, setValidForm] = useState(false);\n  const [fetchForm, FormLoading, formError] = useFetching(async () => {\n    const formData = {\n      name,\n      email,\n      comment\n    };\n    await PostService.getAll(limit, page);\n  });\n  useEffect(() => {\n    if (setNameError || setEmailError) {\n      setValidForm(false);\n    } else {\n      setValidForm(true);\n    }\n  }, [setNameError, setEmailError]);\n\n  //Валидация для имени\n  const nameHandler = e => {\n    setName(e.target.value);\n    if (e.target.value.length < 3 || e.target.value.length > 20) {\n      setNameError(\"Поле имя должно быть длинеее 3 и меньше 20\");\n      if (!e.target.value) {\n        setNameError('Имя не может быть пустым');\n      }\n    } else {\n      setNameError('');\n    }\n  };\n\n  //Валидация для email\n  const emailHandler = e => {\n    setEmail(e.target.value);\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!re.test(String(e.target.value).toLowerCase())) {\n      setEmailError('Некоректный email');\n    } else {\n      setEmailError('');\n    }\n  };\n\n  //При смене фокуса с поля инпут \n  const blurHandler = e => {\n    switch (e.target.name) {\n      case 'name':\n        setNameDirty(true);\n        break;\n      case 'email':\n        setEmailDirty(true);\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form_contact\",\n    children: [nameDirty && nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: nameError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      onChange: e => nameHandler(e),\n      onBlur: e => blurHandler(e),\n      value: name,\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"\\u0418\\u043C\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), emailDirty && emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: emailError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 44\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      onChange: e => emailHandler(e),\n      onBlur: e => blurHandler(e),\n      value: email,\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyTextarea, {\n      value: comment,\n      onChange: e => setComment(e.target.value),\n      name: \"comment\",\n      type: \"text\",\n      placeholder: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex_end\",\n      children: /*#__PURE__*/_jsxDEV(MyButton, {\n        disabled: !validForm,\n        type: \"submit\",\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(FormContact, \"hp7EaQ7PcZyOmsfRSZZ0fmPwtxI=\", true);\n_c = FormContact;\nexport default FormContact;\nvar _c;\n$RefreshReg$(_c, \"FormContact\");","map":{"version":3,"names":["React","useEffect","useState","MyInput","MyTextarea","MyButton","jsxDEV","_jsxDEV","FormContact","_s","name","setName","nameDirty","setNameDirty","nameError","setNameError","email","setEmail","emailDirty","setEmailDirty","emailError","setEmailError","comment","setComment","validForm","setValidForm","fetchForm","FormLoading","formError","useFetching","formData","PostService","getAll","limit","page","nameHandler","e","target","value","length","emailHandler","re","test","String","toLowerCase","blurHandler","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","type","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/falkinroman/Desktop/my-app/src/components/FormContact.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport MyInput from './UI/input/MyInput';\nimport MyTextarea from './UI/textarea/MyTextarea';\nimport MyButton from './UI/button/MyButton';\n\nconst FormContact = () => {\n\n    const [name, setName] = useState('') \n    const [nameDirty, setNameDirty] = useState(false)\n    const [nameError, setNameError] = useState('Имя не может быть пустым')\n    const [email, setEmail] = useState('') \n    const [emailDirty, setEmailDirty] = useState(false)\n    const [emailError, setEmailError] = useState('email не может быть пустым')\n    const [comment, setComment] = useState('') \n    const [validForm, setValidForm] = useState(false)\n    const [fetchForm, FormLoading, formError] = useFetching(async () => {\n        const formData = {\n            name,\n            email,\n            comment,\n        };\n        await PostService.getAll(limit, page);\n       \n       \n      })\n\n\n    useEffect(() => {\n        if (setNameError || setEmailError) {\n            setValidForm(false)\n        }else {\n            setValidForm(true)\n        }\n    }, [setNameError, setEmailError])\n\n\n    //Валидация для имени\n    const nameHandler = (e) =>{\n        setName(e.target.value)\n        if (e.target.value.length < 3 || e.target.value.length > 20) {\n            setNameError(\"Поле имя должно быть длинеее 3 и меньше 20\")\n            if(!e.target.value) {\n                setNameError('Имя не может быть пустым')\n            }\n        } else {\n            setNameError('')\n        }\n    }\n\n    //Валидация для email\n    const emailHandler = (e) => {\n        setEmail(e.target.value)\n        const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if(!re.test(String(e.target.value).toLowerCase())){\n            setEmailError('Некоректный email')\n        }else {\n            setEmailError('')\n        }\n    }\n\n\n   //При смене фокуса с поля инпут \n    const blurHandler = (e) => {\n        switch(e.target.name){\n            case 'name': \n            setNameDirty(true)\n            break\n\n            case 'email': \n            setEmailDirty(true)\n            break\n        }\n    }\n\n\n     \n\n\n    return (\n        <form className='form_contact' >\n            {(nameDirty && nameError) && <div style={{color: \"red\"}}>{nameError}</div>}\n            <MyInput onChange={e => nameHandler(e)} onBlur={e => blurHandler(e)} value={name}  name=\"name\" type=\"text\" placeholder=\"Имя\" />\n            {(emailDirty && emailError) && <div style={{color: \"red\"}}>{emailError}</div>}\n            <MyInput onChange={e => emailHandler(e)} onBlur={e => blurHandler(e)} value={email}  name=\"email\" type=\"email\" placeholder=\"Email\" />\n            <MyTextarea value={comment} onChange = {(e)=> setComment(e.target.value)} name=\"comment\" type=\"text\" placeholder=\"Комментарий\" />\n            <div className='flex flex_end'>\n                <MyButton disabled={!validForm} type=\"submit\">Отправить</MyButton>\n            </div>\n        </form>\n    );\n};\n\nexport default FormContact;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}