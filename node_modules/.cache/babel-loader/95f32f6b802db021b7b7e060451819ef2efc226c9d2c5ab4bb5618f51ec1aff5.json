{"ast":null,"code":"var _jsxFileName = \"/Users/falkinroman/Desktop/my-app/src/components/FormContact.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MyInput from './UI/input/MyInput';\nimport MyTextarea from './UI/textarea/MyTextarea';\nimport MyButton from './UI/button/MyButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContact = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [nameDirty, setNameDirty] = useState('false');\n  const [nameError, setNameError] = useState('Имя не может быть пустым');\n  const [email, emailName] = useState('');\n  const [emailDirty, setEmailDirty] = useState('false');\n  const [emailError, setEmailError] = useState('email не может быть пустым');\n  const [comment, setComment] = useState('');\n  const [commentDirty, setCommentDirty] = useState('false');\n  const [commentError, setCommentError] = useState('comment не может быть пустым');\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form_contact\",\n    children: [nameDirty && nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: nameError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: name,\n      onChange: e => setName(e.target.value),\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"\\u0418\\u043C\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: email,\n      onChange: e => emailName(e.target.value),\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyTextarea, {\n      value: comment,\n      onChange: e => setComment(e.target.value),\n      name: \"comment\",\n      type: \"text\",\n      placeholder: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex_end\",\n      children: /*#__PURE__*/_jsxDEV(MyButton, {\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(FormContact, \"IPyYnbe5N6FwibVMT+LX8KmxfX0=\");\n_c = FormContact;\nexport default FormContact;\nvar _c;\n$RefreshReg$(_c, \"FormContact\");","map":{"version":3,"names":["React","useState","MyInput","MyTextarea","MyButton","jsxDEV","_jsxDEV","FormContact","_s","name","setName","nameDirty","setNameDirty","nameError","setNameError","email","emailName","emailDirty","setEmailDirty","emailError","setEmailError","comment","setComment","commentDirty","setCommentDirty","commentError","setCommentError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/falkinroman/Desktop/my-app/src/components/FormContact.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport MyInput from './UI/input/MyInput';\nimport MyTextarea from './UI/textarea/MyTextarea';\nimport MyButton from './UI/button/MyButton';\n\nconst FormContact = () => {\n\n    const [name, setName] = useState('') \n    const [nameDirty, setNameDirty] = useState('false')\n    const [nameError, setNameError] = useState('Имя не может быть пустым')\n    const [email, emailName] = useState('') \n    const [emailDirty, setEmailDirty] = useState('false')\n    const [emailError, setEmailError] = useState('email не может быть пустым')\n    const [comment, setComment] = useState('') \n    const [commentDirty, setCommentDirty] = useState('false')\n    const [commentError, setCommentError] = useState('comment не может быть пустым')\n\n\n     \n\n\n    return (\n        <form className='form_contact'>\n            {(nameDirty && nameError) && <div>{nameError}</div>}\n            <MyInput value={name} onChange = {(e)=> setName(e.target.value)} name=\"name\" type=\"text\" placeholder=\"Имя\" />\n            <MyInput value={email} onChange = {(e)=> emailName(e.target.value)} name=\"email\" type=\"email\" placeholder=\"Email\" />\n            <MyTextarea value={comment} onChange = {(e)=> setComment(e.target.value)} name=\"comment\" type=\"text\" placeholder=\"Комментарий\" />\n            <div className='flex flex_end'>\n                <MyButton>Отправить</MyButton>\n            </div>\n        </form>\n    );\n};\n\nexport default FormContact;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}