{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useParams}from'react-router-dom';import{useFetching}from'../hook/useFetching';import PostService from'../API/PostService';import Loader from'../components/UI/loader/Loader';import CommentList from'../components/CommentList';import PostIdItem from'../components/PostIdItem';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PostIdPage=()=>{const params=useParams();//хук позволяет закрать с url параметр (номер поста)\nconst[post,setPost]=useState({});//Сохранить значение поста\nconst[comments,setComments]=useState([]);//Сохранить значения комментариев \n//Получение поста по id \nconst[fetchPostId,isPostIdLoading,postIdError]=useFetching(async()=>{const responce=await PostService.getById(params.id);setPost(responce.data);});//Получение комментарии к посту\nconst[fetchComments,isComLoading,comError]=useFetching(async()=>{const responce=await PostService.getCommetsById(params.id);setComments(responce.data);});useEffect(()=>{fetchPostId();fetchComments();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[isPostIdLoading?/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',marginTop:30},children:/*#__PURE__*/_jsx(Loader,{})}):/*#__PURE__*/_jsx(PostIdItem,{post:post}),isComLoading?/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',marginTop:30},children:/*#__PURE__*/_jsx(Loader,{})}):/*#__PURE__*/_jsx(CommentList,{comments:comments})]});};export default PostIdPage;","map":{"version":3,"names":["React","useEffect","useState","useParams","useFetching","PostService","Loader","CommentList","PostIdItem","jsx","_jsx","jsxs","_jsxs","PostIdPage","params","post","setPost","comments","setComments","fetchPostId","isPostIdLoading","postIdError","responce","getById","id","data","fetchComments","isComLoading","comError","getCommetsById","children","style","display","justifyContent","marginTop"],"sources":["/Users/falkinroman/Desktop/my-app/reactPosts/src/Pages/PostIdPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetching } from '../hook/useFetching';\nimport PostService from '../API/PostService';\nimport Loader from '../components/UI/loader/Loader';\nimport CommentList from '../components/CommentList';\nimport PostIdItem from '../components/PostIdItem';\n\nconst PostIdPage = () => {\n    const params = useParams()  //хук позволяет закрать с url параметр (номер поста)\n    const [post, setPost] = useState({}); //Сохранить значение поста\n    const [comments, setComments] = useState([]); //Сохранить значения комментариев \n\n    //Получение поста по id \n    const [fetchPostId, isPostIdLoading, postIdError] = useFetching(async () => {\n        const responce = await PostService.getById(params.id)\n        setPost(responce.data)\n    })\n\n    //Получение комментарии к посту\n    const [fetchComments, isComLoading, comError] = useFetching(async () => {\n        const responce = await PostService.getCommetsById(params.id)\n        setComments(responce.data)\n    })\n\n    useEffect(() => {\n        fetchPostId()\n        fetchComments()\n    }, [])\n\n    return (\n        <div>\n            {isPostIdLoading\n                ? <div style={{ display: 'flex', justifyContent: 'center', marginTop: 30 }}><Loader /></div>\n                : <PostIdItem post={post}/>\n            }\n\n            {isComLoading\n                ? <div style={{ display: 'flex', justifyContent: 'center', marginTop: 30 }}><Loader /></div>\n                : <CommentList comments={comments}/>\n\n            }\n        </div>\n\n    );\n};\n\nexport default PostIdPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,OAASC,WAAW,KAAQ,qBAAqB,CACjD,MAAO,CAAAC,WAAW,KAAM,oBAAoB,CAC5C,MAAO,CAAAC,MAAM,KAAM,gCAAgC,CACnD,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CACnD,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAElD,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACrB,KAAM,CAAAC,MAAM,CAAGX,SAAS,CAAC,CAAC,CAAE;AAC5B,KAAM,CAACY,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;AACtC,KAAM,CAACe,QAAQ,CAAEC,WAAW,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAE9C;AACA,KAAM,CAACiB,WAAW,CAAEC,eAAe,CAAEC,WAAW,CAAC,CAAGjB,WAAW,CAAC,SAAY,CACxE,KAAM,CAAAkB,QAAQ,CAAG,KAAM,CAAAjB,WAAW,CAACkB,OAAO,CAACT,MAAM,CAACU,EAAE,CAAC,CACrDR,OAAO,CAACM,QAAQ,CAACG,IAAI,CAAC,CAC1B,CAAC,CAAC,CAEF;AACA,KAAM,CAACC,aAAa,CAAEC,YAAY,CAAEC,QAAQ,CAAC,CAAGxB,WAAW,CAAC,SAAY,CACpE,KAAM,CAAAkB,QAAQ,CAAG,KAAM,CAAAjB,WAAW,CAACwB,cAAc,CAACf,MAAM,CAACU,EAAE,CAAC,CAC5DN,WAAW,CAACI,QAAQ,CAACG,IAAI,CAAC,CAC9B,CAAC,CAAC,CAEFxB,SAAS,CAAC,IAAM,CACZkB,WAAW,CAAC,CAAC,CACbO,aAAa,CAAC,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACId,KAAA,QAAAkB,QAAA,EACKV,eAAe,cACVV,IAAA,QAAKqB,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAEC,SAAS,CAAE,EAAG,CAAE,CAAAJ,QAAA,cAACpB,IAAA,CAACJ,MAAM,GAAE,CAAC,CAAK,CAAC,cAC1FI,IAAA,CAACF,UAAU,EAACO,IAAI,CAAEA,IAAK,CAAC,CAAC,CAG9BY,YAAY,cACPjB,IAAA,QAAKqB,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAEC,SAAS,CAAE,EAAG,CAAE,CAAAJ,QAAA,cAACpB,IAAA,CAACJ,MAAM,GAAE,CAAC,CAAK,CAAC,cAC1FI,IAAA,CAACH,WAAW,EAACU,QAAQ,CAAEA,QAAS,CAAC,CAAC,EAGvC,CAAC,CAGd,CAAC,CAED,cAAe,CAAAJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}