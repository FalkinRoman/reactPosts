{"ast":null,"code":"var _jsxFileName = \"/Users/falkinroman/Desktop/my-app/src/Pages/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PostList from \"../componens/PostList\";\nimport PostForm from '../components/PostForm';\nimport PostFilter from '../components/PostFilter';\nimport MyModal from '../components/UI/modal/MyModal';\nimport MyButton from '../components/UI/button/MyButton';\nimport { usePosts } from '../components/hook/usePost';\nimport PostService from '../components/API/PostService';\nimport Loader from '../components/UI/loader/Loader';\nimport { useFetching } from '../components/hook/useFetching';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const posts = await PostService.getAll();\n    setPosts(posts);\n  });\n\n  //хук для управления жизненным циклом компонента (получение данных при первичной отрисовке)\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  //добавить новый пост\n  const createNewPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  //удалить пост\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createNewPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: 15\n      },\n      onClick: () => setModal(true),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: 30\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 $\", postError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 84\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), isPostsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: 30\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 84\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: 'Список постов'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Posts, \"4lzWlf5YgI273q9mOPDU4me5nbw=\", false, function () {\n  return [usePosts, useFetching];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","PostList","PostForm","PostFilter","MyModal","MyButton","usePosts","PostService","Loader","useFetching","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","filter","setFilter","sort","query","modal","setModal","sortedAndSearchedPosts","fetchPosts","isPostsLoading","postError","getAll","createNewPost","newPost","removePost","post","p","id","children","visible","setVisible","create","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","onClick","display","justifyContent","remove","title","_c","$RefreshReg$"],"sources":["/Users/falkinroman/Desktop/my-app/src/Pages/Posts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PostList from \"../componens/PostList\";\nimport PostForm from '../components/PostForm';\nimport PostFilter from '../components/PostFilter';\nimport MyModal from '../components/UI/modal/MyModal';\nimport MyButton from '../components/UI/button/MyButton';\nimport { usePosts } from '../components/hook/usePost';\nimport PostService from '../components/API/PostService';\nimport Loader from '../components/UI/loader/Loader';\nimport { useFetching } from '../components/hook/useFetching';\n\n\n\nconst Posts = () => {\n\n    const [posts, setPosts] = useState([]);\n    const [filter, setFilter] = useState({sort: '', query: '' })\n    const [modal, setModal] = useState(false)\n    const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query)\n    const[fetchPosts, isPostsLoading, postError]= useFetching(async() => {\n      const posts = await PostService.getAll();\n      setPosts(posts)\n    })\n  \n    //хук для управления жизненным циклом компонента (получение данных при первичной отрисовке)\n    useEffect(() => {\n      fetchPosts()\n    }, [])\n  \n  \n  \n    //добавить новый пост\n    const createNewPost = (newPost) => {\n      setPosts([...posts, newPost])\n      setModal(false)\n    }\n  \n  \n    //удалить пост\n    const removePost = (post) => {\n      setPosts(posts.filter(p=> p.id !== post.id))\n    }\n  \n  \n    return (\n        <div>\n       <MyModal visible={modal} setVisible={setModal} >\n         <PostForm create={createNewPost}/>\n       </MyModal>\n       \n\n      <PostFilter filter={filter}  setFilter={setFilter}/>\n\n      <MyButton style={{marginTop: 15}} onClick={() => setModal(true)}>\n        Создать пост\n      </MyButton>\n        { postError &&\n            <div style={{display: 'flex', justifyContent: 'center', marginTop:30}}><h2>Произошла ошибка ${postError}</h2></div>\n        }\n        { isPostsLoading \n          ? <div style={{display: 'flex', justifyContent: 'center', marginTop:30}}><Loader/></div>\n          : <PostList remove={removePost}  posts={sortedAndSearchedPosts} title={'Список постов'}/>\n        }\n        \n    </div>\n    );\n};\n\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}